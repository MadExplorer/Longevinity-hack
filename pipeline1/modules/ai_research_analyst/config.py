"""
–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è AI Research Analyst
"""

import os
from pathlib import Path
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
load_dotenv()

# –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏  
TARGET_PAPER_COUNT = int(os.getenv("TARGET_PAPER_COUNT", 10))
MIN_SCORE_THRESHOLD = float(os.getenv("MIN_SCORE_THRESHOLD", 7.0))
MAX_PAPERS_PER_QUERY = int(os.getenv("MAX_PAPERS_PER_QUERY", 20))
ARXIV_BASE_URL = "http://export.arxiv.org/api/query"

# API –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
# –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º –∫–∞–∫ OpenAI, —Ç–∞–∫ –∏ Gemini API
API_PROVIDER = os.getenv("API_PROVIDER", "gemini")  # gemini –∏–ª–∏ openai

if API_PROVIDER.lower() == "gemini":
    # Gemini API —á–µ—Ä–µ–∑ OpenAI compatibility
    OPENAI_API_KEY = os.getenv("GEMINI_API_KEY")
    OPENAI_BASE_URL = "https://generativelanguage.googleapis.com/v1beta/openai/"
    OPENAI_MODEL = os.getenv("OPENAI_MODEL", "gemini-2.5-flash")
else:
    # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π OpenAI API
    OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
    OPENAI_BASE_URL = None
    OPENAI_MODEL = os.getenv("OPENAI_MODEL", "gpt-4")

OPENAI_TEMPERATURE = float(os.getenv("OPENAI_TEMPERATURE", 0.3))

# –ü—É—Ç–∏ –∫ –ø—Ä–æ–º–ø—Ç–∞–º
PROMPTS_DIR = Path(__file__).parent / "prompts"
QUERY_STRATEGIST_PROMPT = PROMPTS_DIR / "query_strategist.txt"
PAPER_EVALUATOR_PROMPT = PROMPTS_DIR / "paper_evaluator.txt"
FINAL_SYNTHESIZER_PROMPT = PROMPTS_DIR / "final_synthesizer.txt"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
LOG_LEVEL = os.getenv("LOG_LEVEL", "INFO")

# –¢–∞–π–º-–∞—É—Ç—ã –∏ –ª–∏–º–∏—Ç—ã
ARXIV_REQUEST_TIMEOUT = int(os.getenv("ARXIV_REQUEST_TIMEOUT", 30))
ARXIV_RATE_LIMIT_DELAY = float(os.getenv("ARXIV_RATE_LIMIT_DELAY", 1.0))  # —Å–µ–∫—É–Ω–¥ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
LLM_REQUEST_TIMEOUT = int(os.getenv("LLM_REQUEST_TIMEOUT", 60))

# –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ (–ø–æ—Å–ª–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –≤—Å–µ—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö)
import logging
config_logger = logging.getLogger(__name__ + ".config")
config_logger.info(f"üîß –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è API:")
config_logger.info(f"  API_PROVIDER: {API_PROVIDER}")
config_logger.info(f"  OPENAI_MODEL: {OPENAI_MODEL}")
config_logger.info(f"  OPENAI_BASE_URL: {OPENAI_BASE_URL}")
config_logger.info(f"  API –∫–ª—é—á —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {'‚úÖ' if OPENAI_API_KEY else '‚ùå'}")
if OPENAI_API_KEY:
    config_logger.info(f"  API –∫–ª—é—á (–ø–µ—Ä–≤—ã–µ 10 —Å–∏–º–≤–æ–ª–æ–≤): {OPENAI_API_KEY[:10]}...")
config_logger.info(f"  TARGET_PAPER_COUNT: {TARGET_PAPER_COUNT}")
config_logger.info(f"  MIN_SCORE_THRESHOLD: {MIN_SCORE_THRESHOLD}") 