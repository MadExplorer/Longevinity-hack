# -*- coding: utf-8 -*-
"""
–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤ –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –∞–Ω–∞–ª–∏–∑–∞ –≥—Ä–∞—Ñ–∞ –∑–Ω–∞–Ω–∏–π
–ü—Ä–æ—Å—Ç–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –±–µ–∑ —Å–ª–æ–∂–Ω—ã—Ö –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π
"""

import os
import instructor
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Google API –∫–ª—é—á–∞
def check_api_key():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ Google API –∫–ª—é—á–∞"""
    if not os.getenv('GOOGLE_API_KEY'):
        print("‚ùå –û—à–∏–±–∫–∞: GOOGLE_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        print("üîß –ü–æ–ª—É—á–∏—Ç–µ –∫–ª—é—á: https://makersuite.google.com/app/apikey")
        print("üîß –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: export GOOGLE_API_KEY=your_api_key_here")
        exit(1)
    
    os.environ["GOOGLE_API_KEY"] = os.getenv('GOOGLE_API_KEY')
    os.environ["KMP_DUPLICATE_LIB_OK"] = "TRUE"

def init_gemini_clients():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤ Gemini"""
    print("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Gemini –∫–ª–∏–µ–Ω—Ç–æ–≤...")
    
    try:
        # –ö–ª–∏–µ–Ω—Ç –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è (–±—ã—Å—Ç—Ä—ã–π, –¥–µ—à–µ–≤—ã–π)
        extractor_client = instructor.from_provider(
            "google/gemini-2.0-flash",
            mode=instructor.Mode.GENAI_TOOLS
        )
        
        # –ö–ª–∏–µ–Ω—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∏ –∫—Ä–∏—Ç–∏–∫–∏ (–º–æ—â–Ω—ã–π)
        critic_client = instructor.from_provider(
            "google/gemini-2.5-flash", 
            # "google/gemini-2.0-flash",
            mode=instructor.Mode.GENAI_STRUCTURED_OUTPUTS
        )
        
        print("‚úÖ Gemini –∫–ª–∏–µ–Ω—Ç—ã —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã!")
        return extractor_client, critic_client
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Gemini: {e}")
        print("üîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∞—à GOOGLE_API_KEY")
        exit(1)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ –º–æ–¥—É–ª—è
check_api_key()
llm_extractor_client, llm_critic_client = init_gemini_clients() 